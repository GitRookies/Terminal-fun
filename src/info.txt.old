- Each cooperative processes will contain these data structure:

1. Address of the next and previous co-worker process of this process.
   std::unordered_set<uint8_t id, uint32_t port>;

* The process with id of 0 will be the 1st process to start the scroll and will pass on to consecutive id programs.
* The process with id of 0 will obviously have no previous co-worker process. Of in case, in the future versions,
  if we design the system in a circular manner then the 1st process will have the last process as its previous co-worker
  process.

- Command-line arguments:

  $ term-fun <N_processes> <my_id> <my_port_no> [<next_port_no> <prev_port_no>]
  
  * <N_processes> is the no of cooperative process that will be involved including itself.
  * If <my_id> is 0 then there will be no <prev_port_no>.
  * If <my_id> is N-1 then there will be no <next_port_no>.
  * For <my_id> between 0 and N-1 then there will be both <next_port_no> and <prev_port_no>.
  * If no arguments are provided then the process will just show a simple scroll and exit.

